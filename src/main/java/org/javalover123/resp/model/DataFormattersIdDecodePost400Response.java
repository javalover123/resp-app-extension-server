/*
 * RESP.app Extension server
 * RESP.app Extension Server API allows you to extend RESP.app with your custom data formatters
 *
 * The version of the OpenAPI document: 2022.0-preview1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.javalover123.resp.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * DataFormattersIdDecodePost400Response
 */
@JsonPropertyOrder({
  DataFormattersIdDecodePost400Response.JSON_PROPERTY_ERROR
})
@JsonTypeName("_data_formatters__id__decode_post_400_response")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2022-07-30T22:32:13.307768900+08:00[Asia/Shanghai]")
@Introspected
public class DataFormattersIdDecodePost400Response {
    public static final String JSON_PROPERTY_ERROR = "error";
    private String error;

    public DataFormattersIdDecodePost400Response() {
    }

    public DataFormattersIdDecodePost400Response error(String error) {
        this.error = error;
        return this;
    }

    /**
     * Get error
     * @return error
     **/
    @Nullable
    @Schema(name = "error", required = false)
    @JsonProperty(JSON_PROPERTY_ERROR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getError() {
        return error;
    }

    @JsonProperty(JSON_PROPERTY_ERROR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setError(String error) {
        this.error = error;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DataFormattersIdDecodePost400Response dataFormattersIdDecodePost400Response = (DataFormattersIdDecodePost400Response) o;
        return Objects.equals(this.error, dataFormattersIdDecodePost400Response.error);
    }

    @Override
    public int hashCode() {
        return Objects.hash(error);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class DataFormattersIdDecodePost400Response {\n");
        sb.append("    error: ").append(toIndentedString(error)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
